// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum TokenStatus {
  RUNNING
  BLACKLIST
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tokens Token[]

  @@map("users")
}

model Token {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  user_id    String?     @db.ObjectId
  token      String
  valid_at   DateTime?
  status     TokenStatus @default(RUNNING)
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt

  user User? @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("tokens")
}

model Category {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  status     Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  products Product[]

  @@map("categories")
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  category_id String?  @db.ObjectId
  name        String
  barcode     String?
  status      Boolean  @default(true)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  category Category? @relation(fields: [category_id], references: [id], onDelete: Cascade)

  @@map("products")
}
